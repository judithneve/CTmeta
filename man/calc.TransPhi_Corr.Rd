% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Calc CovMx stand transformed Phi _ based on
%   Corr.r
\name{calc.TransPhi_Corr}
\alias{calc.TransPhi_Corr}
\title{Calculates the (vectorized) transformed standardized Phi, their covariance matrix, the corresponding elliptical 95 percent confidence interval from a correlation matrix with contemporaneous and lagged correlations, and covariance matrices input for CTmeta}
\usage{
calc.TransPhi_Corr(DeltaTStar, DeltaT, N, corr_YXYX, alpha = 0.05)
}
\arguments{
\item{DeltaTStar}{The time interval to which the standardized lagged effects matrix should be transformed to.}

\item{DeltaT}{The time interval used.}

\item{N}{Number of persons (panel data) or measurement occasions - 1 (time series data). Used in determining the covariance matrix of the vectorized standardized lagged effects.}

\item{corr_YXYX}{The correlation matrix of the variables and the lagged variables (of size 2q x 2q). The upper (q x q) is the correlation matrix between the (q) variables and the lower (q x q) matrix is the correlation matrix between the (q) lagged variables.}

\item{alpha}{The alpha level in determining the (1-alpha)*100 percent confidence interval (CI). By default set to 0.05, resulting in a 95& CI}
}
\value{
vectorized transformed standardized lagged effects (i.e., for DeltaTStar), their covariance matrix, and the corresponding elliptical/multivariate 95 percent CI; SigmaVAR: residual covariance matrix for DeltaTStar which is needed in CTmeta; Gamma: stationary covariance matrix which is needed in CTmeta.
}
\description{
Calculates the (vectorized) transformed standardized Phi, their covariance matrix, the corresponding elliptical 95 percent confidence interval from a correlation matrix with contemporaneous and lagged correlations, and covariance matrices input for CTmeta
}
\examples{

# Example with full correlation matrix
corr_YXYX <- matrix(c(1.00, 0.40, 0.63, 0.34,
0.40, 1.00, 0.31, 0.63,
0.63, 0.31, 1.00, 0.41,
0.34, 0.63, 0.41, 1.00), byrow = T, ncol = 4)
calc.TransPhi_Corr(12, 24, 2235, corr_YXYX)

# Example with vector of lower triangular correlation matrix
LT <- c(0.40, 0.63, 0.34, 0.31, 0.63, 0.41) # corr_YXYX[lower.tri(corr_YXYX,diag = F)]
corr_YXYX <- diag(4) # As check: length(LT) = 4*(4-1)/2
corr_YXYX[lower.tri(corr_YXYX,diag = F)] <- LT
corr_YXYX[upper.tri(corr_YXYX,diag = F)] <- t(corr_YXYX)[upper.tri(t(corr_YXYX),diag = F)]
calc.TransPhi_Corr(12, 24, 2235, corr_YXYX)

# Example with vector of lower triangular correlation matrix including diagonals
LTD <- c(1.00, 0.40, 0.63, 0.34, 1.00, 0.31, 0.63, 1.00, 0.41, 1.00) # corr_YXYX[lower.tri(corr_YXYX,diag = T)]
corr_YXYX <- matrix(NA, nrow=(4), ncol=(4))  # As check: length(LTD) = 4*(4+1)/2
corr_YXYX[lower.tri(corr_YXYX,diag = T)] <- LTD
corr_YXYX[upper.tri(corr_YXYX,diag = F)] <- t(corr_YXYX)[upper.tri(t(corr_YXYX),diag = F)]
calc.TransPhi_Corr(12, 24, 2235, corr_YXYX)

# The output (vecStandPhi_DeltaTStar, SigmaVAR_DeltaTStar, and Gamma) can be used to make stacked matrices or arrays which serves as input for CTmeta (using the function CTMA).
}
